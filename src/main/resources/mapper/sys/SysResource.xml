<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.sys.SysResourceDao">
    <resultMap type="com.example.demo.entity.sys.SysResourceDO" id="commonMap">
        <result column="create_time" property="createTime"/>
        <result column="description" property="description"/>
        <result column="icon" property="icon"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="permission" property="permission"/>
        <result column="pid" property="pid"/>
        <result column="router" property="router"/>
        <result column="status" property="status"/>
        <result column="sys_type" property="sysType"/>
        <result column="title" property="title"/>
        <result column="type" property="type"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="tableName">
        sys_resource
    </sql>

    <sql id="columns">
        create_time,
        description,
        icon,
        name,
        permission,
        pid,
        router,
        status,
        sys_type,
        title,
        type,
        update_time
    </sql>

    <sql id="columnsWithId">
        id,
        <include refid="columns"/>
    </sql>

    <sql id="entities">
        #{createTime},
        #{description},
        #{icon},
        #{name},
        #{permission},
        #{pid},
        #{router},
        #{status},
        #{sysType},
        #{title},
        #{type},
        #{updateTime}
    </sql>

    <sql id="entitiesWithId">
        #{id},
        <include refid="entities"/>
    </sql>

    <insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tableName"/>
        (
        <include refid="columns"/>
        )
        VALUES
        (
        <include refid="entities"/>
        )
    </insert>

    <update id="update" parameterType="com.example.demo.entity.sys.SysResourceDO">
        UPDATE
        <include refid="tableName"/>
        <trim prefix="SET" suffixOverrides=",">
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="icon != null and icon != ''">
                icon = #{icon},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="permission != null and permission != ''">
                permission = #{permission},
            </if>
            <if test="pid != null">
                pid = #{pid},
            </if>
            <if test="router != null and router != ''">
                router = #{router},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sysType != null">
                sys_type = #{sysType},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            update_time = #{updateTime}
        </trim>
        WHERE
        id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM
        <include refid="tableName"/>
        WHERE
        id = #{id}
    </delete>

    <select id="getById" resultMap="commonMap">
        SELECT
        <include refid="columnsWithId"/>
        FROM
        <include refid="tableName"/>
        WHERE
        id = #{id}
    </select>

    <select id="isExistById" resultType="java.lang.Boolean">
        SELECT EXISTS
        (
        SELECT 1 FROM
        <include refid="tableName"/>
        WHERE
        id = #{id}
        )
    </select>

    <select id="list" resultMap="commonMap">
        SELECT
        <include refid="columnsWithId"/>
        FROM
        <include refid="tableName"/>
        <include refid="queryCondition"/>
    </select>

    <select id="isExistByUserIdAndPermission" resultType="java.lang.Boolean">
        SELECT EXISTS
        (
            SELECT 1
            FROM
            <include refid="tableName"/> t1
            LEFT JOIN
            sys_permission_resource_mid t2
            ON
            t1.id = t2.resource_id
            LEFT JOIN
            sys_role_permission_mid t3
            ON
            t2.permission_id = t3.permission_id
            LEFT JOIN
            sys_user_role_mid t4
            ON
            t3.role_id = t4.role_id
            WHERE
            t1.permission = #{permission}
            AND
            t4.user_id = #{userId}
            LIMIT 1
        )
    </select>

    <select id="listPermissionStringByUserId" resultType="java.lang.String">
        SELECT DISTINCT
        t1.permission
        FROM
        <include refid="tableName"/> t1
        LEFT JOIN
        sys_permission_resource_mid t2
        ON
        t1.id = t2.resource_id
        LEFT JOIN
        sys_role_permission_mid t3
        ON
        t2.permission_id = t3.permission_id
        LEFT JOIN
        sys_user_role_mid t4
        ON
        t3.role_id = t4.role_id
        WHERE
        t4.user_id = #{userId}
    </select>


    <sql id="queryCondition">
        <trim prefix="where" prefixOverrides="and">
            <if test="query != null">
                <if test="query.createTime != null">
                    AND
                    create_time = #{query.createTime}
                </if>
                <if test="query.description != null">
                    AND
                    description = #{query.description}
                </if>
                <if test="query.icon != null">
                    AND
                    icon = #{query.icon}
                </if>
                <if test="query.id != null and query.id > 0 ">
                    AND
                    id = #{query.id}
                </if>
                <if test="query.name != null">
                    AND
                    name = #{query.name}
                </if>
                <if test="query.permission != null">
                    AND
                    permission = #{query.permission}
                </if>
                <if test="query.pid != null and query.pid > 0 ">
                    AND
                    pid = #{query.pid}
                </if>
                <if test="query.router != null">
                    AND
                    router = #{query.router}
                </if>
                <if test="query.status != null and query.status > 0 ">
                    AND
                    status = #{query.status}
                </if>
                <if test="query.sysType != null and query.sysType > 0 ">
                    AND
                    sys_type = #{query.sysType}
                </if>
                <if test="query.title != null">
                    AND
                    title = #{query.title}
                </if>
                <if test="query.type != null and query.type > 0 ">
                    AND
                    type = #{query.type}
                </if>
                <if test="query.updateTime != null">
                    AND
                    update_time = #{query.updateTime}
                </if>
            </if>
        </trim>
    </sql>

</mapper>
