<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.sys.SysRoleDao">
    <resultMap type="com.example.demo.entity.sys.SysRoleDO" id="commonMap">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="title" property="title"/>
        <result column="type" property="type"/>
        <result column="permission_range" property="permissionRange"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="tableName">
        sys_role
    </sql>

    <sql id="columns">
        name,
        title,
        type,
        permission_range,
        status,
        remark,
        create_time,
        update_time
    </sql>

    <sql id="columnsWithIdAndAlias">
        t4.id,
        <include refid="columns"/>
    </sql>

    <sql id="columnsWithAlias">
        t4.name,
        t4.title,
        t4.type,
        t4.permission_range,
        t4.status,
        t4.remark,
        t4.create_time,
        t4.update_time
    </sql>

    <sql id="columnsWithId">
        id,
        <include refid="columns"/>
    </sql>

    <sql id="entities">
        #{name},
        #{title},
        #{type},
        #{permissionRange},
        #{status},
        #{remark},
        #{createTime},
        #{updateTime}
    </sql>

    <sql id="entitiesWithId">
        #{id},
        <include refid="entities"/>
    </sql>

    <insert id="save" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tableName"/>
        (
        <include refid="columns"/>
        )
        VALUES
        (
        <include refid="entities"/>
        )
    </insert>

    <update id="update" parameterType="com.example.demo.entity.sys.SysRoleDO">
        UPDATE
        <include refid="tableName"/>
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="permissionRange != null">
                permission_range = #{permissionRange},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM
        <include refid="tableName"/>
        WHERE
        id = #{id}
    </delete>

    <select id="getById" resultMap="commonMap">
        SELECT
        <include refid="columnsWithId"/>
        FROM
        <include refid="tableName"/>
        WHERE
        id = #{id}
    </select>


    <select id="list" resultMap="commonMap">
        SELECT
        <include refid="columnsWithId"/>
        FROM
        <include refid="tableName"/>
        <include refid="queryCondition"/>
    </select>

    <select id="listRoleNameByUserId" resultType="java.lang.String">
        SELECT DISTINCT
            t1.name
        FROM
            sys_role t1
            LEFT JOIN sys_user_role_mid t2 ON t1.id = t2.role_id
        WHERE
            t2.user_id = #{userId}
    </select>

    <select id="isExistsByName" resultType="java.lang.Boolean">
        SELECT EXISTS
        (
        SELECT 1 FROM
        <include refid="tableName"/>
        WHERE
        name = #{name}
        LIMIT 1
        )
    </select>

    <select id="listByUserIdAndPermission" resultMap="commonMap">
        SELECT
        <include refid="columnsWithIdAndAlias"/>
        FROM
        sys_resource t1
        LEFT JOIN sys_permission_resource_mid t2 ON t1.id = t2.resource_id
        LEFT JOIN sys_role_permission_mid t3 ON t2.permission_id = t3.permission_id
        LEFT JOIN sys_role t4 ON t3.role_id = t4.id
        LEFT JOIN sys_user_role_mid t5 ON t4.id = t5.role_id
        WHERE
        t5.user_id = #{userId}
        AND
        t1.permission = #{permission}
        AND
        t4.status = #{status}
    </select>

    <sql id="queryCondition">
        <trim prefix="where" prefixOverrides="and">
            <if test="query != null">
                <if test="query.id != null">
                    AND
                    id = #{query.id}
                </if>
                <if test="query.name != null">
                    AND
                    name LIKE CONCAT('%', #{query.name}, '%')
                </if>
                <if test="query.title != null">
                    AND
                    title LIKE CONCAT('%', #{query.title}, '%')
                </if>
                <if test="query.type != null">
                    AND
                    type = #{query.type}
                </if>
                <if test="query.permissionRange != null">
                    AND
                    permission_range = #{query.permissionRange}
                </if>
                <if test="query.status != null">
                    AND
                    status = #{query.status}
                </if>
                <if test="query.remark != null">
                    AND
                    remark LIKE CONCAT('%', #{query.remark}, '%')
                </if>
                <if test="query.createTime != null">
                    AND
                    create_time = #{query.createTime}
                </if>
                <if test="query.updateTime != null">
                    AND
                    update_time = #{query.updateTime}
                </if>
            </if>
        </trim>
    </sql>

</mapper>
